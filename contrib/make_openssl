#!/bin/bash

set -e

# Empty for Linux
# darwin64-x86_64-clang for macOS
# mingw32 for Wine / Windows
TRIPLET="$1"
GIT_COMMIT="cd7c7fc20b9feeb900632389401f514ac6b82f16" # version 1.0.2t
CONFIG_OPTIONS="no-bf no-camellia no-capieng no-cast no-cms no-des no-dsa
no-dso no-engines no-err no-hw no-idea no-jpake no-krb5 no-md2 no-mdc2 no-md4
no-psk no-rc2 no-rc4 no-rc5 no-seed no-shared no-srp no-ssl2 no-ssl3 no-test
no-zlib"

here=$(dirname $(realpath "$0" 2> /dev/null || grealpath "$0"))
. "$here"/base.sh || (echo "Could not source contrib/base.sh" && exit 1)

which git || fail "Git is required to proceed"

pkgname="openssl"
info "Building $pkgname..."

pushd "$here"/$pkgname || fail "Could not chdir to $here/$pkgname"
git checkout $GIT_COMMIT || fail "Could not check out $pkgname $GIT_COMMIT"
git clean -dfxq
(
    if [ -n "$TRIPLET" ] ; then
        ./Configure $TRIPLET --prefix="$here/$pkgname/dist" $CONFIG_OPTIONS
    else
        ./config --prefix="$here/$pkgname/dist" $CONFIG_OPTIONS
    fi
) || fail "Could not configure $pkgname. Please make sure you have a C compiler installed and try again."
make depend || fail "Could not build $pkgname"
make -j$WORKER_COUNT || fail "Could not build $pkgname"
make install || fail "Could not install $pkgname"
git checkout master  # Undo the previous explicit checkout to this hash
git clean -dfxq
popd
