#!/bin/bash

set -e

# Ability to pass cross compilation flags
# "--host=i686-w64-mingw32 --build=x86_64-pc-linux-gnu" for Windows
CROSS_COMPILE_FLAGS="${CROSS_COMPILE_FLAGS:-$1}"
GIT_COMMIT="a9752bb2d1c1f5abb30e5bde7a1fad582629e46d"  # According to Mark B. Lundeberg, using a commit hash guarantees no repository man-in-the-middle funny business as git is secure when verifying hashes.

here=$(dirname $(realpath "$0" 2> /dev/null || grealpath "$0"))
. "$here"/base.sh || (echo "Could not source contrib/base.sh" && exit 1)

which git || fail "Git is required to proceed"

pkgname="secp256k1"
info "Building $pkgname..."

pushd "$here"/$pkgname || fail "Could not chdir to $here/$pkgname"
git checkout $GIT_COMMIT || fail "Could not check out $pkgname $GIT_COMMIT"
git clean -dfxq
./autogen.sh || fail "Could not run autogen for $pkgname. Please make sure you have automake and libtool installed, and try again."
./configure \
    $CROSS_COMPILE_FLAGS \
    --prefix="$here/$pkgname/dist" \
    --enable-module-recovery \
    --enable-experimental \
    --enable-module-ecdh \
    --disable-jni \
    --with-bignum=no \
    --enable-module-schnorr \
    --disable-tests \
    --disable-static \
    --enable-shared || fail "Could not configure $pkgname. Please make sure you have a C compiler installed and try again."
make -j$WORKER_COUNT || fail "Could not build $pkgname"
make install || fail "Could not install $pkgname"
. "$here/$pkgname/dist/lib/libsecp256k1.la"
cp -fpv "$here/$pkgname/dist/lib/$dlname" "$here/../lib" || fail "Could not copy the $pkgname binary to its destination"
info "$dlname has been placed in the 'lib' folder."
git checkout master  # Undo the previous explicit checkout to this hash
git clean -dfxq
popd
